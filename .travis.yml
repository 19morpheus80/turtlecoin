sudo: false
language: cpp
cache: ccache
matrix:
  include:
  - os: linux
    env:
    - MATRIX_EVAL="CC=aarch64-linux-gnu-gcc && CXX=aarch64-linux-gnu-g++"
    - LABEL="aarch64"
    - _DEPLOYABLE="true"
    - STRIP="aarch64-linux-gnu-strip"
before_install:
- eval $MATRIX_EVAL
install:
- if [[ "$LABEL" == "aarch64" ]]; then export BASEDIR=`pwd` ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $HOME ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz
  ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.gz
  ; fi
- if [[ "$LABEL" == "aarch64" ]]; then mkdir toolchain && cd toolchain ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar xfv ../gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz
  >/dev/null ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu
  ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar zxvf ../../boost_1_55_0.tar.gz >/dev/null
  ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd boost_1_55_0 ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./bootstrap.sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then curl https://raw.githubusercontent.com/turtlecoin/turtlecoin/development/scripts/fix_boost_aarch64.sh
  | sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./b2 toolset=gcc-aarch64 --with-system --with-filesystem
  --with-thread --with-date_time --with-chrono --with-regex --with-serialization --with-program_options
  >/dev/null; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_BOOST_ROOT="-DBOOST_ROOT=`pwd`"
  ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_TOOLCHAIN="-DCMAKE_TOOLCHAIN_FILE=../scripts/cross-aarch64.cmake"
  ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export STRIP="$HOME/toolchain/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu/bin/aarch64-linux-gnu-strip"
  ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $BASEDIR ; fi
script:
- eval $MATRIX_EVAL
- mkdir build && cd build
- cmake -DCMAKE_BUILD_TYPE=Release -DSTATIC=true .. ${CUSTOM_TOOLCHAIN} ${CUSTOM_BOOST_ROOT}
- make -j2
before_deploy:
- if [[ "${TRAVIS_TAG}" == "" ]]; then export TRAVIS_TAG="v0.12.0" ; fi
- cd src
- TARGETS="TurtleCoind miner zedwallet turtle-service zedwallet-beta cryptotest wallet-api"
- "${STRIP} ${TARGETS}"
- rm -rf turtlecoin-${TRAVIS_TAG}
- mkdir turtlecoin-${TRAVIS_TAG}
- cp ${TARGETS} turtlecoin-${TRAVIS_TAG}/
- cp ../../LICENSE turtlecoin-${TRAVIS_TAG}/
- tar cvfz turtlecoin-${TRAVIS_TAG}-${LABEL}.tar.gz turtlecoin-${TRAVIS_TAG}/
- rm -rf builds
- mkdir builds
- cp turtlecoin-${TRAVIS_TAG}-${LABEL}.tar.gz builds
- cd ..
deploy:
  provider: releases
  api_key:
    secure: XDDjgXoIMIQSQ/XCN7bKd1MCTlgyYnKlBn3ovgAXGomvzzzHJrNsCKXq/JsiJKKCM6exmTYqgsAJHDBgN8MEc4vXbpkqaTfXkvdLUOQ1aK7sJouC1D3z2wWfzkPUYauXnWnC3ToOEebzMIgElnywL49mAlzmVMCSG0F1KNp408Z5SYFuRBIkDQ4A+GAm7yAIKb0l0liVKwS8UGfQlZO/z+PmbdcwZhdwzWFCa9cNw9r29umCI61h9BUg4WOQuOIzfeOcmeTLPr+WIbX6W80+lzQBlxmcCY/Ty68y3DHa8EQTt5EdsNUjqArovn/2p8I34mkYdRkzAqrSiMMAv0CUrk4AmWGQyT9p2Wfop/UWE+sv/GcomaO1O6XAzb4CGbljSLdQMYHwJKGYe+so3GCAGeLMeKjz7h6oKNStE7ENun0DaoRoct6csBveCvZo5JwSbKRBa9oyCmP4eBB4NOqtdpOfE0aS9gAg5NJiZodnq07ge5sGWFXrntsx3ZN8DYCBvIalr60yY8ZYRyWZIDA9toh57h+LIJ6yeZNAMU256oJCk9hep/XG6rjwp/9e5OhwO4SDgNcqkib/Fj7BG/8z/z5i71dkB4R68G+Hg560pv4l8P2y8XmDUvihIKfc53Knj/L7gXQSp49t9D9cUlXarj1yGgteySru0XeG4p3NhYQ=
  file: turtlecoin-${TRAVIS_TAG}-${LABEL}.tar.gz
  skip_cleanup: true
  on:
    tags: true
  
